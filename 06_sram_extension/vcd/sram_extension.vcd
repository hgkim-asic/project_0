$date
	Thu Jul  4 10:57:42 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module sram_extension_tb $end
$var wire 64 ! o_data [63:0] $end
$var reg 6 " i_addr [5:0] $end
$var reg 1 # i_clk $end
$var reg 64 $ i_data [63:0] $end
$var reg 1 % i_oen $end
$var reg 1 & i_wen $end
$var reg 128 ' taskState [127:0] $end
$var reg 256 ( vcd_file [255:0] $end
$var integer 32 ) i [31:0] $end
$var integer 32 * j [31:0] $end
$scope module u_sram_extension $end
$var wire 6 + i_addr [5:0] $end
$var wire 1 # i_clk $end
$var wire 64 , i_data [63:0] $end
$var wire 1 % i_oen $end
$var wire 1 & i_wen $end
$var wire 64 - o_data [63:0] $end
$var reg 4 . cen [3:0] $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var wire 4 / i_addr [3:0] $end
$var wire 1 0 i_cen $end
$var wire 1 # i_clk $end
$var wire 32 1 i_data [31:0] $end
$var wire 1 % i_oen $end
$var wire 1 & i_wen $end
$var reg 32 2 o_data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var wire 4 3 i_addr [3:0] $end
$var wire 1 4 i_cen $end
$var wire 1 # i_clk $end
$var wire 32 5 i_data [31:0] $end
$var wire 1 % i_oen $end
$var wire 1 & i_wen $end
$var reg 32 6 o_data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var wire 4 7 i_addr [3:0] $end
$var wire 1 8 i_cen $end
$var wire 1 # i_clk $end
$var wire 32 9 i_data [31:0] $end
$var wire 1 % i_oen $end
$var wire 1 & i_wen $end
$var reg 32 : o_data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var wire 4 ; i_addr [3:0] $end
$var wire 1 < i_cen $end
$var wire 1 # i_clk $end
$var wire 32 = i_data [31:0] $end
$var wire 1 % i_oen $end
$var wire 1 & i_wen $end
$var reg 32 > o_data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var wire 4 ? i_addr [3:0] $end
$var wire 1 @ i_cen $end
$var wire 1 # i_clk $end
$var wire 32 A i_data [31:0] $end
$var wire 1 % i_oen $end
$var wire 1 & i_wen $end
$var reg 32 B o_data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var wire 4 C i_addr [3:0] $end
$var wire 1 D i_cen $end
$var wire 1 # i_clk $end
$var wire 32 E i_data [31:0] $end
$var wire 1 % i_oen $end
$var wire 1 & i_wen $end
$var reg 32 F o_data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var wire 4 G i_addr [3:0] $end
$var wire 1 H i_cen $end
$var wire 1 # i_clk $end
$var wire 32 I i_data [31:0] $end
$var wire 1 % i_oen $end
$var wire 1 & i_wen $end
$var reg 32 J o_data [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var wire 4 K i_addr [3:0] $end
$var wire 1 L i_cen $end
$var wire 1 # i_clk $end
$var wire 32 M i_data [31:0] $end
$var wire 1 % i_oen $end
$var wire 1 & i_wen $end
$var reg 32 N o_data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope task init $end
$upscope $end
$scope task memRD $end
$var reg 6 O ti_addr [5:0] $end
$upscope $end
$scope task memWR $end
$var reg 6 P ti_addr [5:0] $end
$var reg 64 Q ti_data [63:0] $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 R \mem[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 S \mem[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 T \mem[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 U \mem[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 V \mem[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 W \mem[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 X \mem[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 Y \mem[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 Z \mem[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 [ \mem[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 \ \mem[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 ] \mem[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 ^ \mem[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 _ \mem[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 ` \mem[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 a \mem[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 b \mem[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 c \mem[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 d \mem[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 e \mem[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 f \mem[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 g \mem[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 h \mem[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 i \mem[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 j \mem[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 k \mem[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 l \mem[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 m \mem[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 n \mem[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 o \mem[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 p \mem[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 q \mem[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 r \mem[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 s \mem[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 t \mem[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 u \mem[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 v \mem[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 w \mem[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 x \mem[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 y \mem[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 z \mem[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 { \mem[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 | \mem[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 } \mem[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 ~ \mem[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 !" \mem[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 "" \mem[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 #" \mem[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 $" \mem[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 %" \mem[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 &" \mem[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 '" \mem[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 (" \mem[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 )" \mem[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 *" \mem[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 +" \mem[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 ," \mem[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 -" \mem[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 ." \mem[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 /" \mem[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 0" \mem[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[0] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 1" \mem[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[0] $end
$scope module u_spsram $end
$var reg 32 2" \mem[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module sram_extension_tb $end
$scope module u_sram_extension $end
$scope begin genblk1[1] $end
$scope begin genblk2[1] $end
$scope module u_spsram $end
$var reg 32 3" \mem[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
b0 M
0L
b0 K
bx J
b0 I
0H
b0 G
bx F
b0 E
0D
b0 C
bx B
b0 A
0@
b0 ?
bx >
b0 =
0<
b0 ;
bx :
b0 9
08
b0 7
bx 6
b0 5
14
b0 3
bx 2
b0 1
10
b0 /
b1 .
bx -
b0 ,
b0 +
b10000 *
bx )
b1011100010111101110110011000110110010000101111011100110111001001100001011011010101111101100101011110000111010001100101011011100111001101101001011011110110111000101110011101100110001101100100 (
b1010011010101000100000101001110010001000100001001011001 '
0&
0%
b0 $
0#
b0 "
bx !
$end
#5
bx R
bz 2
bx S
bz !
bz -
bz 6
bx T
bz :
bx U
bz >
bz B
bz F
bz J
bz N
1#
#10
b10101110101001001011111010000110011000001011000 '
1&
0#
b1 P
b1 Q
b1 )
#15
bx U
bx T
b0 S
b0 R
1#
#20
b1 /
b1 3
b1 7
b1 ;
b1 ?
b1 C
b1 G
b1 K
b1 1
b1 9
b1 A
b1 I
b10 P
b10 Q
b10 )
b1 "
b1 +
b1 $
b1 ,
0#
#25
b1 V
b0 W
bx X
bx Y
1#
#30
b10 /
b10 3
b10 7
b10 ;
b10 ?
b10 C
b10 G
b10 K
b10 1
b10 9
b10 A
b10 I
b11 P
b11 Q
b11 )
b10 "
b10 +
b10 $
b10 ,
0#
#35
bx ]
bx \
b0 [
b10 Z
1#
#40
b11 /
b11 3
b11 7
b11 ;
b11 ?
b11 C
b11 G
b11 K
b11 1
b11 9
b11 A
b11 I
b100 P
b100 Q
b100 )
b11 "
b11 +
b11 $
b11 ,
0#
#45
b11 ^
b0 _
bx `
bx a
1#
#50
b100 /
b100 3
b100 7
b100 ;
b100 ?
b100 C
b100 G
b100 K
b100 1
b100 9
b100 A
b100 I
b101 P
b101 Q
b101 )
b100 "
b100 +
b100 $
b100 ,
0#
#55
bx e
bx d
b0 c
b100 b
1#
#60
b101 /
b101 3
b101 7
b101 ;
b101 ?
b101 C
b101 G
b101 K
b101 1
b101 9
b101 A
b101 I
b110 P
b110 Q
b110 )
b101 "
b101 +
b101 $
b101 ,
0#
#65
b101 f
b0 g
bx h
bx i
1#
#70
b110 /
b110 3
b110 7
b110 ;
b110 ?
b110 C
b110 G
b110 K
b110 1
b110 9
b110 A
b110 I
b111 P
b111 Q
b111 )
b110 "
b110 +
b110 $
b110 ,
0#
#75
bx m
bx l
b0 k
b110 j
1#
#80
b111 /
b111 3
b111 7
b111 ;
b111 ?
b111 C
b111 G
b111 K
b111 1
b111 9
b111 A
b111 I
b1000 P
b1000 Q
b1000 )
b111 "
b111 +
b111 $
b111 ,
0#
#85
b111 n
b0 o
bx p
bx q
1#
#90
b1000 /
b1000 3
b1000 7
b1000 ;
b1000 ?
b1000 C
b1000 G
b1000 K
b1000 1
b1000 9
b1000 A
b1000 I
b1001 P
b1001 Q
b1001 )
b1000 "
b1000 +
b1000 $
b1000 ,
0#
#95
bx u
bx t
b0 s
b1000 r
1#
#100
b1001 /
b1001 3
b1001 7
b1001 ;
b1001 ?
b1001 C
b1001 G
b1001 K
b1001 1
b1001 9
b1001 A
b1001 I
b1010 P
b1010 Q
b1010 )
b1001 "
b1001 +
b1001 $
b1001 ,
0#
#105
b1001 v
b0 w
bx x
bx y
1#
#110
b1010 /
b1010 3
b1010 7
b1010 ;
b1010 ?
b1010 C
b1010 G
b1010 K
b1010 1
b1010 9
b1010 A
b1010 I
b1011 P
b1011 Q
b1011 )
b1010 "
b1010 +
b1010 $
b1010 ,
0#
#115
bx }
bx |
b0 {
b1010 z
1#
#120
b1011 /
b1011 3
b1011 7
b1011 ;
b1011 ?
b1011 C
b1011 G
b1011 K
b1011 1
b1011 9
b1011 A
b1011 I
b1100 P
b1100 Q
b1100 )
b1011 "
b1011 +
b1011 $
b1011 ,
0#
#125
b1011 ~
b0 !"
bx ""
bx #"
1#
#130
b1100 /
b1100 3
b1100 7
b1100 ;
b1100 ?
b1100 C
b1100 G
b1100 K
b1100 1
b1100 9
b1100 A
b1100 I
b1101 P
b1101 Q
b1101 )
b1100 "
b1100 +
b1100 $
b1100 ,
0#
#135
bx '"
bx &"
b0 %"
b1100 $"
1#
#140
b1101 /
b1101 3
b1101 7
b1101 ;
b1101 ?
b1101 C
b1101 G
b1101 K
b1101 1
b1101 9
b1101 A
b1101 I
b1110 P
b1110 Q
b1110 )
b1101 "
b1101 +
b1101 $
b1101 ,
0#
#145
b1101 ("
b0 )"
bx *"
bx +"
1#
#150
b1110 /
b1110 3
b1110 7
b1110 ;
b1110 ?
b1110 C
b1110 G
b1110 K
b1110 1
b1110 9
b1110 A
b1110 I
b1111 P
b1111 Q
b1111 )
b1110 "
b1110 +
b1110 $
b1110 ,
0#
#155
bx /"
bx ."
b0 -"
b1110 ,"
1#
#160
b1111 /
b1111 3
b1111 7
b1111 ;
b1111 ?
b1111 C
b1111 G
b1111 K
b1111 1
b1111 9
b1111 A
b1111 I
b10000 P
b10000 Q
b10000 )
b1111 "
b1111 +
b1111 $
b1111 ,
0#
#165
b1111 0"
b0 1"
bx 2"
bx 3"
1#
#170
00
04
18
1<
b10101110101001001011111010000110011000101011000 '
b10 .
b0 /
b0 3
b0 7
b0 ;
b0 ?
b0 C
b0 G
b0 K
b10000 1
b10000 9
b10000 A
b10000 I
b10001 P
b10001 Q
b10001 )
b10000 "
b10000 +
b10000 $
b10000 ,
0#
#175
b0 U
b10000 T
b0 S
b0 R
1#
#180
b1 /
b1 3
b1 7
b1 ;
b1 ?
b1 C
b1 G
b1 K
b10001 1
b10001 9
b10001 A
b10001 I
b10010 P
b10010 Q
b10010 )
b10001 "
b10001 +
b10001 $
b10001 ,
0#
#185
b1 V
b0 W
b10001 X
b0 Y
1#
#190
b10 /
b10 3
b10 7
b10 ;
b10 ?
b10 C
b10 G
b10 K
b10010 1
b10010 9
b10010 A
b10010 I
b10011 P
b10011 Q
b10011 )
b10010 "
b10010 +
b10010 $
b10010 ,
0#
#195
b0 ]
b10010 \
b0 [
b10 Z
1#
#200
b11 /
b11 3
b11 7
b11 ;
b11 ?
b11 C
b11 G
b11 K
b10011 1
b10011 9
b10011 A
b10011 I
b10100 P
b10100 Q
b10100 )
b10011 "
b10011 +
b10011 $
b10011 ,
0#
#205
b11 ^
b0 _
b10011 `
b0 a
1#
#210
b100 /
b100 3
b100 7
b100 ;
b100 ?
b100 C
b100 G
b100 K
b10100 1
b10100 9
b10100 A
b10100 I
b10101 P
b10101 Q
b10101 )
b10100 "
b10100 +
b10100 $
b10100 ,
0#
#215
b0 e
b10100 d
b0 c
b100 b
1#
#220
b101 /
b101 3
b101 7
b101 ;
b101 ?
b101 C
b101 G
b101 K
b10101 1
b10101 9
b10101 A
b10101 I
b10110 P
b10110 Q
b10110 )
b10101 "
b10101 +
b10101 $
b10101 ,
0#
#225
b101 f
b0 g
b10101 h
b0 i
1#
#230
b110 /
b110 3
b110 7
b110 ;
b110 ?
b110 C
b110 G
b110 K
b10110 1
b10110 9
b10110 A
b10110 I
b10111 P
b10111 Q
b10111 )
b10110 "
b10110 +
b10110 $
b10110 ,
0#
#235
b0 m
b10110 l
b0 k
b110 j
1#
#240
b111 /
b111 3
b111 7
b111 ;
b111 ?
b111 C
b111 G
b111 K
b10111 1
b10111 9
b10111 A
b10111 I
b11000 P
b11000 Q
b11000 )
b10111 "
b10111 +
b10111 $
b10111 ,
0#
#245
b111 n
b0 o
b10111 p
b0 q
1#
#250
b1000 /
b1000 3
b1000 7
b1000 ;
b1000 ?
b1000 C
b1000 G
b1000 K
b11000 1
b11000 9
b11000 A
b11000 I
b11001 P
b11001 Q
b11001 )
b11000 "
b11000 +
b11000 $
b11000 ,
0#
#255
b0 u
b11000 t
b0 s
b1000 r
1#
#260
b1001 /
b1001 3
b1001 7
b1001 ;
b1001 ?
b1001 C
b1001 G
b1001 K
b11001 1
b11001 9
b11001 A
b11001 I
b11010 P
b11010 Q
b11010 )
b11001 "
b11001 +
b11001 $
b11001 ,
0#
#265
b1001 v
b0 w
b11001 x
b0 y
1#
#270
b1010 /
b1010 3
b1010 7
b1010 ;
b1010 ?
b1010 C
b1010 G
b1010 K
b11010 1
b11010 9
b11010 A
b11010 I
b11011 P
b11011 Q
b11011 )
b11010 "
b11010 +
b11010 $
b11010 ,
0#
#275
b0 }
b11010 |
b0 {
b1010 z
1#
#280
b1011 /
b1011 3
b1011 7
b1011 ;
b1011 ?
b1011 C
b1011 G
b1011 K
b11011 1
b11011 9
b11011 A
b11011 I
b11100 P
b11100 Q
b11100 )
b11011 "
b11011 +
b11011 $
b11011 ,
0#
#285
b1011 ~
b0 !"
b11011 ""
b0 #"
1#
#290
b1100 /
b1100 3
b1100 7
b1100 ;
b1100 ?
b1100 C
b1100 G
b1100 K
b11100 1
b11100 9
b11100 A
b11100 I
b11101 P
b11101 Q
b11101 )
b11100 "
b11100 +
b11100 $
b11100 ,
0#
#295
b0 '"
b11100 &"
b0 %"
b1100 $"
1#
#300
b1101 /
b1101 3
b1101 7
b1101 ;
b1101 ?
b1101 C
b1101 G
b1101 K
b11101 1
b11101 9
b11101 A
b11101 I
b11110 P
b11110 Q
b11110 )
b11101 "
b11101 +
b11101 $
b11101 ,
0#
#305
b1101 ("
b0 )"
b11101 *"
b0 +"
1#
#310
b1110 /
b1110 3
b1110 7
b1110 ;
b1110 ?
b1110 C
b1110 G
b1110 K
b11110 1
b11110 9
b11110 A
b11110 I
b11111 P
b11111 Q
b11111 )
b11110 "
b11110 +
b11110 $
b11110 ,
0#
#315
b0 /"
b11110 ."
b0 -"
b1110 ,"
1#
#320
b1111 /
b1111 3
b1111 7
b1111 ;
b1111 ?
b1111 C
b1111 G
b1111 K
b11111 1
b11111 9
b11111 A
b11111 I
b100000 P
b100000 Q
b100000 )
b11111 "
b11111 +
b11111 $
b11111 ,
0#
#325
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#330
08
0<
1@
1D
b10101110101001001011111010000110011001001011000 '
b100 .
b0 /
b0 3
b0 7
b0 ;
b0 ?
b0 C
b0 G
b0 K
b100000 1
b100000 9
b100000 A
b100000 I
b100001 P
b100001 Q
b100001 )
b100000 "
b100000 +
b100000 $
b100000 ,
0#
#335
b0 U
b10000 T
b0 S
b0 R
1#
#340
b1 /
b1 3
b1 7
b1 ;
b1 ?
b1 C
b1 G
b1 K
b100001 1
b100001 9
b100001 A
b100001 I
b100010 P
b100010 Q
b100010 )
b100001 "
b100001 +
b100001 $
b100001 ,
0#
#345
b1 V
b0 W
b10001 X
b0 Y
1#
#350
b10 /
b10 3
b10 7
b10 ;
b10 ?
b10 C
b10 G
b10 K
b100010 1
b100010 9
b100010 A
b100010 I
b100011 P
b100011 Q
b100011 )
b100010 "
b100010 +
b100010 $
b100010 ,
0#
#355
b0 ]
b10010 \
b0 [
b10 Z
1#
#360
b11 /
b11 3
b11 7
b11 ;
b11 ?
b11 C
b11 G
b11 K
b100011 1
b100011 9
b100011 A
b100011 I
b100100 P
b100100 Q
b100100 )
b100011 "
b100011 +
b100011 $
b100011 ,
0#
#365
b11 ^
b0 _
b10011 `
b0 a
1#
#370
b100 /
b100 3
b100 7
b100 ;
b100 ?
b100 C
b100 G
b100 K
b100100 1
b100100 9
b100100 A
b100100 I
b100101 P
b100101 Q
b100101 )
b100100 "
b100100 +
b100100 $
b100100 ,
0#
#375
b0 e
b10100 d
b0 c
b100 b
1#
#380
b101 /
b101 3
b101 7
b101 ;
b101 ?
b101 C
b101 G
b101 K
b100101 1
b100101 9
b100101 A
b100101 I
b100110 P
b100110 Q
b100110 )
b100101 "
b100101 +
b100101 $
b100101 ,
0#
#385
b101 f
b0 g
b10101 h
b0 i
1#
#390
b110 /
b110 3
b110 7
b110 ;
b110 ?
b110 C
b110 G
b110 K
b100110 1
b100110 9
b100110 A
b100110 I
b100111 P
b100111 Q
b100111 )
b100110 "
b100110 +
b100110 $
b100110 ,
0#
#395
b0 m
b10110 l
b0 k
b110 j
1#
#400
b111 /
b111 3
b111 7
b111 ;
b111 ?
b111 C
b111 G
b111 K
b100111 1
b100111 9
b100111 A
b100111 I
b101000 P
b101000 Q
b101000 )
b100111 "
b100111 +
b100111 $
b100111 ,
0#
#405
b111 n
b0 o
b10111 p
b0 q
1#
#410
b1000 /
b1000 3
b1000 7
b1000 ;
b1000 ?
b1000 C
b1000 G
b1000 K
b101000 1
b101000 9
b101000 A
b101000 I
b101001 P
b101001 Q
b101001 )
b101000 "
b101000 +
b101000 $
b101000 ,
0#
#415
b0 u
b11000 t
b0 s
b1000 r
1#
#420
b1001 /
b1001 3
b1001 7
b1001 ;
b1001 ?
b1001 C
b1001 G
b1001 K
b101001 1
b101001 9
b101001 A
b101001 I
b101010 P
b101010 Q
b101010 )
b101001 "
b101001 +
b101001 $
b101001 ,
0#
#425
b1001 v
b0 w
b11001 x
b0 y
1#
#430
b1010 /
b1010 3
b1010 7
b1010 ;
b1010 ?
b1010 C
b1010 G
b1010 K
b101010 1
b101010 9
b101010 A
b101010 I
b101011 P
b101011 Q
b101011 )
b101010 "
b101010 +
b101010 $
b101010 ,
0#
#435
b0 }
b11010 |
b0 {
b1010 z
1#
#440
b1011 /
b1011 3
b1011 7
b1011 ;
b1011 ?
b1011 C
b1011 G
b1011 K
b101011 1
b101011 9
b101011 A
b101011 I
b101100 P
b101100 Q
b101100 )
b101011 "
b101011 +
b101011 $
b101011 ,
0#
#445
b1011 ~
b0 !"
b11011 ""
b0 #"
1#
#450
b1100 /
b1100 3
b1100 7
b1100 ;
b1100 ?
b1100 C
b1100 G
b1100 K
b101100 1
b101100 9
b101100 A
b101100 I
b101101 P
b101101 Q
b101101 )
b101100 "
b101100 +
b101100 $
b101100 ,
0#
#455
b0 '"
b11100 &"
b0 %"
b1100 $"
1#
#460
b1101 /
b1101 3
b1101 7
b1101 ;
b1101 ?
b1101 C
b1101 G
b1101 K
b101101 1
b101101 9
b101101 A
b101101 I
b101110 P
b101110 Q
b101110 )
b101101 "
b101101 +
b101101 $
b101101 ,
0#
#465
b1101 ("
b0 )"
b11101 *"
b0 +"
1#
#470
b1110 /
b1110 3
b1110 7
b1110 ;
b1110 ?
b1110 C
b1110 G
b1110 K
b101110 1
b101110 9
b101110 A
b101110 I
b101111 P
b101111 Q
b101111 )
b101110 "
b101110 +
b101110 $
b101110 ,
0#
#475
b0 /"
b11110 ."
b0 -"
b1110 ,"
1#
#480
b1111 /
b1111 3
b1111 7
b1111 ;
b1111 ?
b1111 C
b1111 G
b1111 K
b101111 1
b101111 9
b101111 A
b101111 I
b110000 P
b110000 Q
b110000 )
b101111 "
b101111 +
b101111 $
b101111 ,
0#
#485
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#490
0@
0D
1H
1L
b10101110101001001011111010000110011001101011000 '
b1000 .
b0 /
b0 3
b0 7
b0 ;
b0 ?
b0 C
b0 G
b0 K
b110000 1
b110000 9
b110000 A
b110000 I
b110001 P
b110001 Q
b110001 )
b110000 "
b110000 +
b110000 $
b110000 ,
0#
#495
b0 U
b10000 T
b0 S
b0 R
1#
#500
b1 /
b1 3
b1 7
b1 ;
b1 ?
b1 C
b1 G
b1 K
b110001 1
b110001 9
b110001 A
b110001 I
b110010 P
b110010 Q
b110010 )
b110001 "
b110001 +
b110001 $
b110001 ,
0#
#505
b1 V
b0 W
b10001 X
b0 Y
1#
#510
b10 /
b10 3
b10 7
b10 ;
b10 ?
b10 C
b10 G
b10 K
b110010 1
b110010 9
b110010 A
b110010 I
b110011 P
b110011 Q
b110011 )
b110010 "
b110010 +
b110010 $
b110010 ,
0#
#515
b0 ]
b10010 \
b0 [
b10 Z
1#
#520
b11 /
b11 3
b11 7
b11 ;
b11 ?
b11 C
b11 G
b11 K
b110011 1
b110011 9
b110011 A
b110011 I
b110100 P
b110100 Q
b110100 )
b110011 "
b110011 +
b110011 $
b110011 ,
0#
#525
b11 ^
b0 _
b10011 `
b0 a
1#
#530
b100 /
b100 3
b100 7
b100 ;
b100 ?
b100 C
b100 G
b100 K
b110100 1
b110100 9
b110100 A
b110100 I
b110101 P
b110101 Q
b110101 )
b110100 "
b110100 +
b110100 $
b110100 ,
0#
#535
b0 e
b10100 d
b0 c
b100 b
1#
#540
b101 /
b101 3
b101 7
b101 ;
b101 ?
b101 C
b101 G
b101 K
b110101 1
b110101 9
b110101 A
b110101 I
b110110 P
b110110 Q
b110110 )
b110101 "
b110101 +
b110101 $
b110101 ,
0#
#545
b101 f
b0 g
b10101 h
b0 i
1#
#550
b110 /
b110 3
b110 7
b110 ;
b110 ?
b110 C
b110 G
b110 K
b110110 1
b110110 9
b110110 A
b110110 I
b110111 P
b110111 Q
b110111 )
b110110 "
b110110 +
b110110 $
b110110 ,
0#
#555
b0 m
b10110 l
b0 k
b110 j
1#
#560
b111 /
b111 3
b111 7
b111 ;
b111 ?
b111 C
b111 G
b111 K
b110111 1
b110111 9
b110111 A
b110111 I
b111000 P
b111000 Q
b111000 )
b110111 "
b110111 +
b110111 $
b110111 ,
0#
#565
b111 n
b0 o
b10111 p
b0 q
1#
#570
b1000 /
b1000 3
b1000 7
b1000 ;
b1000 ?
b1000 C
b1000 G
b1000 K
b111000 1
b111000 9
b111000 A
b111000 I
b111001 P
b111001 Q
b111001 )
b111000 "
b111000 +
b111000 $
b111000 ,
0#
#575
b0 u
b11000 t
b0 s
b1000 r
1#
#580
b1001 /
b1001 3
b1001 7
b1001 ;
b1001 ?
b1001 C
b1001 G
b1001 K
b111001 1
b111001 9
b111001 A
b111001 I
b111010 P
b111010 Q
b111010 )
b111001 "
b111001 +
b111001 $
b111001 ,
0#
#585
b1001 v
b0 w
b11001 x
b0 y
1#
#590
b1010 /
b1010 3
b1010 7
b1010 ;
b1010 ?
b1010 C
b1010 G
b1010 K
b111010 1
b111010 9
b111010 A
b111010 I
b111011 P
b111011 Q
b111011 )
b111010 "
b111010 +
b111010 $
b111010 ,
0#
#595
b0 }
b11010 |
b0 {
b1010 z
1#
#600
b1011 /
b1011 3
b1011 7
b1011 ;
b1011 ?
b1011 C
b1011 G
b1011 K
b111011 1
b111011 9
b111011 A
b111011 I
b111100 P
b111100 Q
b111100 )
b111011 "
b111011 +
b111011 $
b111011 ,
0#
#605
b1011 ~
b0 !"
b11011 ""
b0 #"
1#
#610
b1100 /
b1100 3
b1100 7
b1100 ;
b1100 ?
b1100 C
b1100 G
b1100 K
b111100 1
b111100 9
b111100 A
b111100 I
b111101 P
b111101 Q
b111101 )
b111100 "
b111100 +
b111100 $
b111100 ,
0#
#615
b0 '"
b11100 &"
b0 %"
b1100 $"
1#
#620
b1101 /
b1101 3
b1101 7
b1101 ;
b1101 ?
b1101 C
b1101 G
b1101 K
b111101 1
b111101 9
b111101 A
b111101 I
b111110 P
b111110 Q
b111110 )
b111101 "
b111101 +
b111101 $
b111101 ,
0#
#625
b1101 ("
b0 )"
b11101 *"
b0 +"
1#
#630
b1110 /
b1110 3
b1110 7
b1110 ;
b1110 ?
b1110 C
b1110 G
b1110 K
b111110 1
b111110 9
b111110 A
b111110 I
b111111 P
b111111 Q
b111111 )
b111110 "
b111110 +
b111110 $
b111110 ,
0#
#635
b0 /"
b11110 ."
b0 -"
b1110 ,"
1#
#640
b1111 /
b1111 3
b1111 7
b1111 ;
b1111 ?
b1111 C
b1111 G
b1111 K
b111111 1
b111111 9
b111111 A
b111111 I
b0 O
b0 )
b111111 "
b111111 +
b111111 $
b111111 ,
0#
#645
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#650
10
14
0H
0L
b10100100100010001011111010000110011000001011000 '
b1 .
b0 /
b0 3
b0 7
b0 ;
b0 ?
b0 C
b0 G
b0 K
b1 O
b1 )
1%
0&
b0 "
b0 +
0#
#655
b0 U
b10000 T
b0 6
b0 S
b0 !
b0 -
b0 2
b0 R
1#
#660
b1 /
b1 3
b1 7
b1 ;
b1 ?
b1 C
b1 G
b1 K
b10 O
b10 )
b1 "
b1 +
0#
#665
b1 V
b1 !
b1 -
b1 2
b0 W
b10001 X
b0 Y
1#
#670
b10 /
b10 3
b10 7
b10 ;
b10 ?
b10 C
b10 G
b10 K
b11 O
b11 )
b10 "
b10 +
0#
#675
b0 ]
b10010 \
b0 [
b10 !
b10 -
b10 2
b10 Z
1#
#680
b11 /
b11 3
b11 7
b11 ;
b11 ?
b11 C
b11 G
b11 K
b100 O
b100 )
b11 "
b11 +
0#
#685
b11 ^
b11 !
b11 -
b11 2
b0 _
b10011 `
b0 a
1#
#690
b100 /
b100 3
b100 7
b100 ;
b100 ?
b100 C
b100 G
b100 K
b101 O
b101 )
b100 "
b100 +
0#
#695
b0 e
b10100 d
b0 c
b100 !
b100 -
b100 2
b100 b
1#
#700
b101 /
b101 3
b101 7
b101 ;
b101 ?
b101 C
b101 G
b101 K
b110 O
b110 )
b101 "
b101 +
0#
#705
b101 f
b101 !
b101 -
b101 2
b0 g
b10101 h
b0 i
1#
#710
b110 /
b110 3
b110 7
b110 ;
b110 ?
b110 C
b110 G
b110 K
b111 O
b111 )
b110 "
b110 +
0#
#715
b0 m
b10110 l
b0 k
b110 !
b110 -
b110 2
b110 j
1#
#720
b111 /
b111 3
b111 7
b111 ;
b111 ?
b111 C
b111 G
b111 K
b1000 O
b1000 )
b111 "
b111 +
0#
#725
b111 n
b111 !
b111 -
b111 2
b0 o
b10111 p
b0 q
1#
#730
b1000 /
b1000 3
b1000 7
b1000 ;
b1000 ?
b1000 C
b1000 G
b1000 K
b1001 O
b1001 )
b1000 "
b1000 +
0#
#735
b0 u
b11000 t
b0 s
b1000 !
b1000 -
b1000 2
b1000 r
1#
#740
b1001 /
b1001 3
b1001 7
b1001 ;
b1001 ?
b1001 C
b1001 G
b1001 K
b1010 O
b1010 )
b1001 "
b1001 +
0#
#745
b1001 v
b1001 !
b1001 -
b1001 2
b0 w
b11001 x
b0 y
1#
#750
b1010 /
b1010 3
b1010 7
b1010 ;
b1010 ?
b1010 C
b1010 G
b1010 K
b1011 O
b1011 )
b1010 "
b1010 +
0#
#755
b0 }
b11010 |
b0 {
b1010 !
b1010 -
b1010 2
b1010 z
1#
#760
b1011 /
b1011 3
b1011 7
b1011 ;
b1011 ?
b1011 C
b1011 G
b1011 K
b1100 O
b1100 )
b1011 "
b1011 +
0#
#765
b1011 ~
b1011 !
b1011 -
b1011 2
b0 !"
b11011 ""
b0 #"
1#
#770
b1100 /
b1100 3
b1100 7
b1100 ;
b1100 ?
b1100 C
b1100 G
b1100 K
b1101 O
b1101 )
b1100 "
b1100 +
0#
#775
b0 '"
b11100 &"
b0 %"
b1100 !
b1100 -
b1100 2
b1100 $"
1#
#780
b1101 /
b1101 3
b1101 7
b1101 ;
b1101 ?
b1101 C
b1101 G
b1101 K
b1110 O
b1110 )
b1101 "
b1101 +
0#
#785
b1101 ("
b1101 !
b1101 -
b1101 2
b0 )"
b11101 *"
b0 +"
1#
#790
b1110 /
b1110 3
b1110 7
b1110 ;
b1110 ?
b1110 C
b1110 G
b1110 K
b1111 O
b1111 )
b1110 "
b1110 +
0#
#795
b0 /"
b11110 ."
b0 -"
b1110 !
b1110 -
b1110 2
b1110 ,"
1#
#800
b1111 /
b1111 3
b1111 7
b1111 ;
b1111 ?
b1111 C
b1111 G
b1111 K
b10000 O
b10000 )
b1111 "
b1111 +
0#
#805
b1111 0"
b1111 !
b1111 -
b1111 2
b0 1"
b11111 2"
b0 3"
1#
#810
00
04
18
1<
b10100100100010001011111010000110011000101011000 '
b10 .
b0 /
b0 3
b0 7
b0 ;
b0 ?
b0 C
b0 G
b0 K
b10001 O
b10001 )
b10000 "
b10000 +
0#
#815
b0 >
b0 U
b10000 :
b10000 T
bz 6
b0 S
b10000 !
b10000 -
bz 2
b0 R
1#
#820
b1 /
b1 3
b1 7
b1 ;
b1 ?
b1 C
b1 G
b1 K
b10010 O
b10010 )
b10001 "
b10001 +
0#
#825
b1 V
b0 W
b10001 X
b10001 !
b10001 -
b10001 :
b0 Y
1#
#830
b10 /
b10 3
b10 7
b10 ;
b10 ?
b10 C
b10 G
b10 K
b10011 O
b10011 )
b10010 "
b10010 +
0#
#835
b0 ]
b10010 !
b10010 -
b10010 :
b10010 \
b0 [
b10 Z
1#
#840
b11 /
b11 3
b11 7
b11 ;
b11 ?
b11 C
b11 G
b11 K
b10100 O
b10100 )
b10011 "
b10011 +
0#
#845
b11 ^
b0 _
b10011 `
b10011 !
b10011 -
b10011 :
b0 a
1#
#850
b100 /
b100 3
b100 7
b100 ;
b100 ?
b100 C
b100 G
b100 K
b10101 O
b10101 )
b10100 "
b10100 +
0#
#855
b0 e
b10100 !
b10100 -
b10100 :
b10100 d
b0 c
b100 b
1#
#860
b101 /
b101 3
b101 7
b101 ;
b101 ?
b101 C
b101 G
b101 K
b10110 O
b10110 )
b10101 "
b10101 +
0#
#865
b101 f
b0 g
b10101 h
b10101 !
b10101 -
b10101 :
b0 i
1#
#870
b110 /
b110 3
b110 7
b110 ;
b110 ?
b110 C
b110 G
b110 K
b10111 O
b10111 )
b10110 "
b10110 +
0#
#875
b0 m
b10110 !
b10110 -
b10110 :
b10110 l
b0 k
b110 j
1#
#880
b111 /
b111 3
b111 7
b111 ;
b111 ?
b111 C
b111 G
b111 K
b11000 O
b11000 )
b10111 "
b10111 +
0#
#885
b111 n
b0 o
b10111 p
b10111 !
b10111 -
b10111 :
b0 q
1#
#890
b1000 /
b1000 3
b1000 7
b1000 ;
b1000 ?
b1000 C
b1000 G
b1000 K
b11001 O
b11001 )
b11000 "
b11000 +
0#
#895
b0 u
b11000 !
b11000 -
b11000 :
b11000 t
b0 s
b1000 r
1#
#900
b1001 /
b1001 3
b1001 7
b1001 ;
b1001 ?
b1001 C
b1001 G
b1001 K
b11010 O
b11010 )
b11001 "
b11001 +
0#
#905
b1001 v
b0 w
b11001 x
b11001 !
b11001 -
b11001 :
b0 y
1#
#910
b1010 /
b1010 3
b1010 7
b1010 ;
b1010 ?
b1010 C
b1010 G
b1010 K
b11011 O
b11011 )
b11010 "
b11010 +
0#
#915
b0 }
b11010 !
b11010 -
b11010 :
b11010 |
b0 {
b1010 z
1#
#920
b1011 /
b1011 3
b1011 7
b1011 ;
b1011 ?
b1011 C
b1011 G
b1011 K
b11100 O
b11100 )
b11011 "
b11011 +
0#
#925
b1011 ~
b0 !"
b11011 ""
b11011 !
b11011 -
b11011 :
b0 #"
1#
#930
b1100 /
b1100 3
b1100 7
b1100 ;
b1100 ?
b1100 C
b1100 G
b1100 K
b11101 O
b11101 )
b11100 "
b11100 +
0#
#935
b0 '"
b11100 !
b11100 -
b11100 :
b11100 &"
b0 %"
b1100 $"
1#
#940
b1101 /
b1101 3
b1101 7
b1101 ;
b1101 ?
b1101 C
b1101 G
b1101 K
b11110 O
b11110 )
b11101 "
b11101 +
0#
#945
b1101 ("
b0 )"
b11101 *"
b11101 !
b11101 -
b11101 :
b0 +"
1#
#950
b1110 /
b1110 3
b1110 7
b1110 ;
b1110 ?
b1110 C
b1110 G
b1110 K
b11111 O
b11111 )
b11110 "
b11110 +
0#
#955
b0 /"
b11110 !
b11110 -
b11110 :
b11110 ."
b0 -"
b1110 ,"
1#
#960
b1111 /
b1111 3
b1111 7
b1111 ;
b1111 ?
b1111 C
b1111 G
b1111 K
b100000 O
b100000 )
b11111 "
b11111 +
0#
#965
b1111 0"
b0 1"
b11111 2"
b11111 !
b11111 -
b11111 :
b0 3"
1#
#970
08
0<
1@
1D
b10100100100010001011111010000110011001001011000 '
b100 .
b0 /
b0 3
b0 7
b0 ;
b0 ?
b0 C
b0 G
b0 K
b100001 O
b100001 )
b100000 "
b100000 +
0#
#975
b0 F
b100000 B
bz >
b0 U
b100000 !
b100000 -
bz :
b10000 T
b0 S
b0 R
1#
#980
b1 /
b1 3
b1 7
b1 ;
b1 ?
b1 C
b1 G
b1 K
b100010 O
b100010 )
b100001 "
b100001 +
0#
#985
b1 V
b0 W
b10001 X
b0 Y
b100001 !
b100001 -
b100001 B
1#
#990
b10 /
b10 3
b10 7
b10 ;
b10 ?
b10 C
b10 G
b10 K
b100011 O
b100011 )
b100010 "
b100010 +
0#
#995
b100010 !
b100010 -
b100010 B
b0 ]
b10010 \
b0 [
b10 Z
1#
#1000
b11 /
b11 3
b11 7
b11 ;
b11 ?
b11 C
b11 G
b11 K
b100100 O
b100100 )
b100011 "
b100011 +
0#
#1005
b11 ^
b0 _
b10011 `
b0 a
b100011 !
b100011 -
b100011 B
1#
#1010
b100 /
b100 3
b100 7
b100 ;
b100 ?
b100 C
b100 G
b100 K
b100101 O
b100101 )
b100100 "
b100100 +
0#
#1015
b100100 !
b100100 -
b100100 B
b0 e
b10100 d
b0 c
b100 b
1#
#1020
b101 /
b101 3
b101 7
b101 ;
b101 ?
b101 C
b101 G
b101 K
b100110 O
b100110 )
b100101 "
b100101 +
0#
#1025
b101 f
b0 g
b10101 h
b0 i
b100101 !
b100101 -
b100101 B
1#
#1030
b110 /
b110 3
b110 7
b110 ;
b110 ?
b110 C
b110 G
b110 K
b100111 O
b100111 )
b100110 "
b100110 +
0#
#1035
b100110 !
b100110 -
b100110 B
b0 m
b10110 l
b0 k
b110 j
1#
#1040
b111 /
b111 3
b111 7
b111 ;
b111 ?
b111 C
b111 G
b111 K
b101000 O
b101000 )
b100111 "
b100111 +
0#
#1045
b111 n
b0 o
b10111 p
b0 q
b100111 !
b100111 -
b100111 B
1#
#1050
b1000 /
b1000 3
b1000 7
b1000 ;
b1000 ?
b1000 C
b1000 G
b1000 K
b101001 O
b101001 )
b101000 "
b101000 +
0#
#1055
b101000 !
b101000 -
b101000 B
b0 u
b11000 t
b0 s
b1000 r
1#
#1060
b1001 /
b1001 3
b1001 7
b1001 ;
b1001 ?
b1001 C
b1001 G
b1001 K
b101010 O
b101010 )
b101001 "
b101001 +
0#
#1065
b1001 v
b0 w
b11001 x
b0 y
b101001 !
b101001 -
b101001 B
1#
#1070
b1010 /
b1010 3
b1010 7
b1010 ;
b1010 ?
b1010 C
b1010 G
b1010 K
b101011 O
b101011 )
b101010 "
b101010 +
0#
#1075
b101010 !
b101010 -
b101010 B
b0 }
b11010 |
b0 {
b1010 z
1#
#1080
b1011 /
b1011 3
b1011 7
b1011 ;
b1011 ?
b1011 C
b1011 G
b1011 K
b101100 O
b101100 )
b101011 "
b101011 +
0#
#1085
b1011 ~
b0 !"
b11011 ""
b0 #"
b101011 !
b101011 -
b101011 B
1#
#1090
b1100 /
b1100 3
b1100 7
b1100 ;
b1100 ?
b1100 C
b1100 G
b1100 K
b101101 O
b101101 )
b101100 "
b101100 +
0#
#1095
b101100 !
b101100 -
b101100 B
b0 '"
b11100 &"
b0 %"
b1100 $"
1#
#1100
b1101 /
b1101 3
b1101 7
b1101 ;
b1101 ?
b1101 C
b1101 G
b1101 K
b101110 O
b101110 )
b101101 "
b101101 +
0#
#1105
b1101 ("
b0 )"
b11101 *"
b0 +"
b101101 !
b101101 -
b101101 B
1#
#1110
b1110 /
b1110 3
b1110 7
b1110 ;
b1110 ?
b1110 C
b1110 G
b1110 K
b101111 O
b101111 )
b101110 "
b101110 +
0#
#1115
b101110 !
b101110 -
b101110 B
b0 /"
b11110 ."
b0 -"
b1110 ,"
1#
#1120
b1111 /
b1111 3
b1111 7
b1111 ;
b1111 ?
b1111 C
b1111 G
b1111 K
b110000 O
b110000 )
b101111 "
b101111 +
0#
#1125
b1111 0"
b0 1"
b11111 2"
b0 3"
b101111 !
b101111 -
b101111 B
1#
#1130
0@
0D
1H
1L
b10100100100010001011111010000110011001101011000 '
b1000 .
b0 /
b0 3
b0 7
b0 ;
b0 ?
b0 C
b0 G
b0 K
b110001 O
b110001 )
b110000 "
b110000 +
0#
#1135
b0 N
b110000 J
bz F
b110000 !
b110000 -
bz B
b0 U
b10000 T
b0 S
b0 R
1#
#1140
b1 /
b1 3
b1 7
b1 ;
b1 ?
b1 C
b1 G
b1 K
b110010 O
b110010 )
b110001 "
b110001 +
0#
#1145
b1 V
b0 W
b10001 X
b0 Y
b110001 !
b110001 -
b110001 J
1#
#1150
b10 /
b10 3
b10 7
b10 ;
b10 ?
b10 C
b10 G
b10 K
b110011 O
b110011 )
b110010 "
b110010 +
0#
#1155
b110010 !
b110010 -
b110010 J
b0 ]
b10010 \
b0 [
b10 Z
1#
#1160
b11 /
b11 3
b11 7
b11 ;
b11 ?
b11 C
b11 G
b11 K
b110100 O
b110100 )
b110011 "
b110011 +
0#
#1165
b11 ^
b0 _
b10011 `
b0 a
b110011 !
b110011 -
b110011 J
1#
#1170
b100 /
b100 3
b100 7
b100 ;
b100 ?
b100 C
b100 G
b100 K
b110101 O
b110101 )
b110100 "
b110100 +
0#
#1175
b110100 !
b110100 -
b110100 J
b0 e
b10100 d
b0 c
b100 b
1#
#1180
b101 /
b101 3
b101 7
b101 ;
b101 ?
b101 C
b101 G
b101 K
b110110 O
b110110 )
b110101 "
b110101 +
0#
#1185
b101 f
b0 g
b10101 h
b0 i
b110101 !
b110101 -
b110101 J
1#
#1190
b110 /
b110 3
b110 7
b110 ;
b110 ?
b110 C
b110 G
b110 K
b110111 O
b110111 )
b110110 "
b110110 +
0#
#1195
b110110 !
b110110 -
b110110 J
b0 m
b10110 l
b0 k
b110 j
1#
#1200
b111 /
b111 3
b111 7
b111 ;
b111 ?
b111 C
b111 G
b111 K
b111000 O
b111000 )
b110111 "
b110111 +
0#
#1205
b111 n
b0 o
b10111 p
b0 q
b110111 !
b110111 -
b110111 J
1#
#1210
b1000 /
b1000 3
b1000 7
b1000 ;
b1000 ?
b1000 C
b1000 G
b1000 K
b111001 O
b111001 )
b111000 "
b111000 +
0#
#1215
b111000 !
b111000 -
b111000 J
b0 u
b11000 t
b0 s
b1000 r
1#
#1220
b1001 /
b1001 3
b1001 7
b1001 ;
b1001 ?
b1001 C
b1001 G
b1001 K
b111010 O
b111010 )
b111001 "
b111001 +
0#
#1225
b1001 v
b0 w
b11001 x
b0 y
b111001 !
b111001 -
b111001 J
1#
#1230
b1010 /
b1010 3
b1010 7
b1010 ;
b1010 ?
b1010 C
b1010 G
b1010 K
b111011 O
b111011 )
b111010 "
b111010 +
0#
#1235
b111010 !
b111010 -
b111010 J
b0 }
b11010 |
b0 {
b1010 z
1#
#1240
b1011 /
b1011 3
b1011 7
b1011 ;
b1011 ?
b1011 C
b1011 G
b1011 K
b111100 O
b111100 )
b111011 "
b111011 +
0#
#1245
b1011 ~
b0 !"
b11011 ""
b0 #"
b111011 !
b111011 -
b111011 J
1#
#1250
b1100 /
b1100 3
b1100 7
b1100 ;
b1100 ?
b1100 C
b1100 G
b1100 K
b111101 O
b111101 )
b111100 "
b111100 +
0#
#1255
b111100 !
b111100 -
b111100 J
b0 '"
b11100 &"
b0 %"
b1100 $"
1#
#1260
b1101 /
b1101 3
b1101 7
b1101 ;
b1101 ?
b1101 C
b1101 G
b1101 K
b111110 O
b111110 )
b111101 "
b111101 +
0#
#1265
b1101 ("
b0 )"
b11101 *"
b0 +"
b111101 !
b111101 -
b111101 J
1#
#1270
b1110 /
b1110 3
b1110 7
b1110 ;
b1110 ?
b1110 C
b1110 G
b1110 K
b111111 O
b111111 )
b111110 "
b111110 +
0#
#1275
b111110 !
b111110 -
b111110 J
b0 /"
b11110 ."
b0 -"
b1110 ,"
1#
#1280
b1111 /
b1111 3
b1111 7
b1111 ;
b1111 ?
b1111 C
b1111 G
b1111 K
b1000000 )
b111111 "
b111111 +
0#
#1285
b1111 0"
b0 1"
b11111 2"
b0 3"
b111111 !
b111111 -
b111111 J
1#
#1290
b1010011010101000100000101001110010001000100001001011001 '
0#
b0 )
0%
#1295
bz N
bz !
bz -
bz J
b0 3"
b11111 2"
b0 1"
b1111 0"
1#
#1300
0#
b1 )
#1305
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#1310
0#
b10 )
#1315
b0 3"
b11111 2"
b0 1"
b1111 0"
1#
#1320
0#
b11 )
#1325
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#1330
0#
b100 )
#1335
b0 3"
b11111 2"
b0 1"
b1111 0"
1#
#1340
0#
b101 )
#1345
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#1350
0#
b110 )
#1355
b0 3"
b11111 2"
b0 1"
b1111 0"
1#
#1360
0#
b111 )
#1365
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#1370
0#
b1000 )
#1375
b0 3"
b11111 2"
b0 1"
b1111 0"
1#
#1380
0#
b1001 )
#1385
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#1390
0#
b1010 )
#1395
b0 3"
b11111 2"
b0 1"
b1111 0"
1#
#1400
0#
b1011 )
#1405
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#1410
0#
b1100 )
#1415
b0 3"
b11111 2"
b0 1"
b1111 0"
1#
#1420
0#
b1101 )
#1425
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#1430
0#
b1110 )
#1435
b0 3"
b11111 2"
b0 1"
b1111 0"
1#
#1440
0#
b1111 )
#1445
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#1450
0#
b10000 )
#1455
b0 3"
b11111 2"
b0 1"
b1111 0"
1#
#1460
0#
b10001 )
#1465
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#1470
0#
b10010 )
#1475
b0 3"
b11111 2"
b0 1"
b1111 0"
1#
#1480
0#
b10011 )
#1485
b1111 0"
b0 1"
b11111 2"
b0 3"
1#
#1490
0#
b10100 )
